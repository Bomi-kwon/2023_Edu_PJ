# DB 삭제/생성/사용
DROP DATABASE IF EXISTS Edu_PJ;
CREATE DATABASE Edu_PJ;
USE Edu_PJ;

USE SB_AM;

# article 테이블 생성
# truncate table article;
# drop table article;

CREATE TABLE article(
id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
regDate DATETIME NOT NULL,
updateDate DATETIME NOT NULL,
memberId INT UNSIGNED NOT NULL,
boardId INT UNSIGNED NOT NULL,
title VARCHAR(100) NOT NULL,
`body` TEXT NOT NULL,
hit INT UNSIGNED NOT NULL DEFAULT 0,
classId INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '전체공개는 0',
deadLine DATETIME,
youTubeLink TEXT
);

ALTER TABLE article MODIFY COLUMN youTubeLink TEXT

# member 테이블 생성
# truncate table `member`;
# drop table `member`;

CREATE TABLE `member`(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	updateDate DATETIME NOT NULL,
	loginID VARCHAR(20) NOT NULL UNIQUE,
	loginPW VARCHAR(100) NOT NULL,
	`authLevel` SMALLINT UNSIGNED NOT NULL DEFAULT 3 COMMENT '권한 레벨 (선생님=1, 학생=2, 학부모=3)',
	`name` VARCHAR(20) NOT NULL,
	cellphoneNum VARCHAR(20) NOT NULL,
	email VARCHAR(50) NOT NULL,
	delStatus TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT '탈퇴여부 (탈퇴 전 = 0, 탈퇴 후 = 1)',
	delData DATETIME COMMENT '탈퇴 날짜',
	classId INT UNSIGNED NOT NULL DEFAULT 0,
	babyId INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '학부모의 자녀 ID'
);

#board 테이블 생성
# truncate table board;
# drop table board;

CREATE TABLE board (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	`code` VARCHAR(20) NOT NULL UNIQUE COMMENT 'notice(알림장), homework(숙제), score(성적),  ...',
	`name` VARCHAR(20) NOT NULL UNIQUE COMMENT '게시판 이름'
);

# group 테이블 생성
# truncate table `group`;
# drop table `group`;

CREATE TABLE `group` (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	grade VARCHAR(20) NOT NULL COMMENT 'elementary(초등), middel(중등), high(고등)',
	groupName VARCHAR(20) NOT NULL COMMENT '반 이름',
	groupDay VARCHAR(20) NOT NULL COMMENT '월수금, 화목토, 토일, ...',
	groupTeacherId INT UNSIGNED NOT NULL COMMENT '담당 선생님id',
	textbook VARCHAR(20) NOT NULL COMMENT '책 이름'
);


# score 테이블 생성
# truncate table score;
# drop table score;

CREATE TABLE score (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	memberId INT UNSIGNED NOT NULL,
	score INT UNSIGNED NOT NULL,
	classId INT UNSIGNED NOT NULL DEFAULT 0,
	relId INT UNSIGNED NOT NULL COMMENT '몇번째 게시물인지'
);

# homework 테이블 생성
# truncate table homework;
# drop table homework;

CREATE TABLE homework (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	memberId INT UNSIGNED NOT NULL,
	hwPerfection INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '과제완성도 %',
	hwMsg TEXT NOT NULL COMMENT '아주 완벽해요, 숙제를 전혀 안 했어요, 숙제를 안 가져왔어요, 베낀 것 같아요, 찍은 것 같아요, ...',
	classId INT UNSIGNED NOT NULL DEFAULT 0,
	relId INT UNSIGNED NOT NULL COMMENT '몇번째 게시물인지'
);

# file 테이블 생성
# truncate table file;
# drop table file;

CREATE TABLE `file` (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	originName VARCHAR(50) NOT NULL,
    savedName VARCHAR(100) NOT NULL,
    savedPath VARCHAR(100) NOT NULL,
    relTypecode VARCHAR(20) NOT NULL COMMENT 'article(게시물), profile(프로필), ...',
	relId INT UNSIGNED NOT NULL COMMENT '데이터의 번호'
);

# coupon 테이블 생성
# truncate table coupon;
# drop table coupon;

CREATE TABLE coupon (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	deadLine DATETIME NOT NULL,
	studentId INT UNSIGNED NOT NULL
);

# attendance 테이블 생성
# truncate table attendance;
# drop table attendance;

CREATE TABLE attendance (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	todayDateAndTime DATETIME NOT NULL,
	classId INT UNSIGNED NOT NULL DEFAULT 0,
	memberId INT UNSIGNED NOT NULL
);


#reactionPoint 테이블 생성
CREATE TABLE reactionPoint(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	memberId INT UNSIGNED NOT NULL,
	relTypecode VARCHAR(20) NOT NULL COMMENT 'article(게시물), reply(댓글), ...',
	relId INT UNSIGNED NOT NULL COMMENT '데이터의 번호',
	`point` SMALLINT NOT NULL DEFAULT 1 COMMENT '좋아요(+1)'
);

# reply 테이블 생성
# truncate table reply;
# drop table reply;

#reply 테이블 생성
CREATE TABLE reply (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	updateDate DATETIME NOT NULL,
	replymemberId INT UNSIGNED NOT NULL,
	relTypecode VARCHAR(20) NOT NULL COMMENT 'article(게시물), reply(댓글), ...',
	relId INT UNSIGNED NOT NULL COMMENT '데이터의 번호',
	replybody TEXT NOT NULL
);

# visitHistory 테이블 생성
# truncate table visitHistory;
# drop table visitHistory;

#visitHistory 테이블 생성
CREATE TABLE visitHistory (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	memberId INT UNSIGNED NOT NULL,
	articleId INT UNSIGNED NOT NULL COMMENT '게시물 번호'
);

# notification 테이블 생성
# truncate table notification;
# drop table notification;

#notification 테이블 생성
CREATE TABLE notification (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	title VARCHAR(100) NOT NULL,
	`body` TEXT NOT NULL,
	link TEXT,
	checked TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT '알림확인여부 (확인 전 = 0, 확인 후 = 1)'
);

# 테이블 구조 확인
DESC article;
DESC `member`;
DESC board;
DESC `group`;
DESC score;
DESC homework;
DESC `file`;
DESC coupon;
DESC attendance;
DESC reactionPoint;
DESC reply;
DESC visitHistory;
DESC notification;

# article 테스트 데이터
INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 1,
boardId = 1,
title = '기말고사기간 공지 안내',
`body` = '공지 내용~~',
classId = 0;

INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 1,
boardId = 1,
title = '여름방학 안내',
`body` = '공지 내용~~',
classId = 0;

INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 1,
boardId = 2,
title = '5/15 수상 월수금반 숙제',
`body` = '나머지 정리까지 풀어오세요.',
classId = 1,
deadLine = DATE_ADD(NOW(), INTERVAL 2 DAY);

INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
boardId = 3,
title = '수상 심화반 총괄테스트',
`body` = '점수~~!!',
classId = 1;

INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
boardId = 3,
title = '수1 기본반 총괄테스트',
`body` = '점수~~!!',
classId = 2;

INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 5,
boardId = 5,
title = '공부인증합니다',
`body` = '오늘 7시간이나 공부했어요 짱이죠?';

INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 19,
boardId = 5,
title = '기말고사 잘보고 싶은데..',
`body` = '너무 더워서 공부하기 싫어요';

SELECT * FROM `member`


# member 테스트 데이터
INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginID = 'admin',
loginPW = 'admin',
`authLevel` = 1,
`name` = '원장',
cellphoneNum = '010-0000-0000',
email = 'kingteacher@naver.com';

INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginID = 'teacher1',
loginPW = 'teacher1',
`authLevel` = 1,
`name` = '권보미',
cellphoneNum = '010-1111-1111',
email = 'mathlover@gmail.com';

INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginID = 'student1',
loginPW = 'student1',
`authLevel` = 2,
`name` = '신짱구',
cellphoneNum = '010-2222-2222',
email = 'jjang9@naver.com',
classId = 1;

INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginID = 'parent1',
loginPW = 'parent1',
`authLevel` = 3,
`name` = '신짱구맘',
cellphoneNum = '010-3333-3333',
email = 'jjang9mom@gmail.com',
classId = 1,
babyId = 3;

INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginID = 'student2',
loginPW = 'student2',
`authLevel` = 2,
`name` = '김철수',
cellphoneNum = '010-4444-4444',
email = 'cheolwater@naver.com',
classId = 1;

INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginID = 'parent2',
loginPW = 'parent2',
`authLevel` = 3,
`name` = '김철수맘',
cellphoneNum = '010-5555-5555',
email = 'cheolwatermom@gmail.com',
classId = 1,
babyId = 5;

# board 테스트 데이터
INSERT INTO board
SET `code` = 'notice',
`name` = '알림장';

INSERT INTO board
SET `code` = 'homework',
`name` = '숙제';

INSERT INTO board
SET `code` = 'score',
`name` = '성적';

INSERT INTO board
SET `code` = 'onlineclass',
`name` = '인터넷강의';

INSERT INTO board
SET `code` = 'study',
`name` = '공부인증';

# group 테스트 데이터
INSERT INTO `group`
SET grade = 'middle',
groupName = '수상심화반',
groupDay = '월수금',
groupTeacherId = 1,
textbook = '쎈 수상';

INSERT INTO `group`
SET grade = 'middle',
groupName = '중 3-2반',
groupDay = '월수금',
groupTeacherId = 1,
textbook = 'RPM 중3-2';

INSERT INTO `group`
SET grade = 'high',
groupName = '수1기본반',
groupDay = '토일',
groupTeacherId = 2,
textbook = '쎈 수1';

INSERT INTO `group`
SET grade = 'high',
groupName = '수2기본반',
groupDay = '토일',
groupTeacherId = 2,
textbook = '쎈 수2';

INSERT INTO `group`
SET grade = 'high',
groupName = '수1심화반',
groupDay = '토일',
groupTeacherId = 2,
textbook = '내신고쟁이 수1';

# score 테스트 데이터
INSERT INTO score
SET memberId = 3,
score = 90,
classId = 1,
relId = 5;

INSERT INTO score
SET memberId = 5,
score = 72,
classId = 1,
relId = 5;

# homework 테스트 데이터
INSERT INTO homework
SET memberId = 3,
hwPerfection = 20,
hwMsg = '숙제를 베꼈어요',
classId = 1,
relId = 4;

INSERT INTO homework
SET memberId = 5,
hwPerfection = 100,
hwMsg = '숙제가 완벽해요',
classId = 1,
relId = 4;

INSERT INTO homework
SET memberId = 8,
hwPerfection = 0,
hwMsg = '숙제를 안 가져왔어요',
classId = 1,
relId = 4;

# coupon 테스트 데이터
INSERT INTO coupon
SET regDate = NOW(),
deadLine = DATE_ADD(NOW(), INTERVAL 4 MONTH),
studentId = 16;

# coupon 테스트 데이터
INSERT INTO coupon
SET regDate = NOW(),
deadLine = DATE_ADD(NOW(), INTERVAL 4 MONTH),
studentId = 16;

# file 테스트 데이터
INSERT INTO `file`
SET regDate = NOW(),
originName = 'mathstudy3.jpg',
savedName = 'mathstudy3.jpg',
savedPath = 'C:/bbomi/upload/mathstudy3.jpg',
relTypecode = 'article',
relId = 71;

INSERT INTO `file`
SET regDate = NOW(),
originName = 'mathstudy.jpg',
savedName = 'mathstudy.jpg',
savedPath = 'C:/bbomi/upload/mathstudy.jpg',
relTypecode = 'article',
relId = 72;


# 데이터 조회하기
SELECT *
FROM article
ORDER BY id DESC;

SELECT *
FROM `member`;

UPDATE `member`
SET classId = 0
WHERE id = 21;

SELECT *
FROM board;

SELECT *
FROM `group`;

SELECT *
FROM score
ORDER BY id DESC;

SELECT *
FROM homework;

SELECT *
FROM `file`
ORDER BY id DESC;

SELECT *
FROM coupon;

SELECT *
FROM reply;

SELECT *
FROM coupon
WHERE studentId = 16;

SELECT *
FROM attendance;

SELECT *
FROM reactionPoint;

SELECT *
FROM visitHistory;

SELECT *
FROM notification;

